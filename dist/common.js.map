{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAHA;AAAA;AAIA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAXA;AAAA;AAAA;;;;;;;;;;;;;;;;ACNA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AAAA;AAOA;AAAA;AAAA;AAHA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA","sources":["webpack://wx-english-dictation/._src_services_sentence.ts","webpack://wx-english-dictation/._src_store_index.ts","webpack://wx-english-dictation/._src_store_sentence.ts"],"sourcesContent":["import * as Taro from '@tarojs/taro'\nimport { Sentence } from '../types/sentence'\n\nconst db = Taro.cloud.database()\nconst sentencesCollection = db.collection('sentences')\n\nexport const getSentenceList = async () => {\n  try {\n    const { data } = await sentencesCollection\n      .orderBy('createdAt', 'desc')\n      .limit(20)\n      .get()\n    return data as Sentence[]\n  } catch (error) {\n    console.error('获取句子列表失败：', error)\n    return []\n  }\n}\n","import { createContext, useContext } from 'react'\nimport SentenceStore from './sentence'\n\nconst store = {\n  sentenceStore: new SentenceStore()\n}\n\nconst StoreContext = createContext(store)\n\nexport const useStore = () => useContext(StoreContext)\n\nexport default store\n","import { makeAutoObservable } from 'mobx'\nimport { getSentenceList } from '../services/sentence'\nimport { Sentence } from '../types/sentence'\n\nclass SentenceStore {\n  sentences: Sentence[] = []\n  loading = false\n\n  constructor() {\n    makeAutoObservable(this)\n  }\n\n  async fetchSentences() {\n    this.loading = true\n    try {\n      const list = await getSentenceList()\n      this.sentences = list\n    } finally {\n      this.loading = false\n    }\n  }\n}\n\nexport default SentenceStore\n"],"names":[],"sourceRoot":""}